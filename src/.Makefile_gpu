.DEFAULT: qcadesigner-cuda

CC = gcc

NVCC = $(CUDA_HOME)/bin/nvcc
	
GLIB = `pkg-config gtk+-2.0 --cflags --libs glib-2.0`
	 
CUDAROOT := $(CUDA_HOME)

CUDASDKROOT := $(CUDA_SDK_HOME)

NVCFLAGS := \
	-I $(CUDASDKROOT)/C/common/inc \
	-I $(CUDAROOT)/include \
	-I /usr/include/glib-2.0 \
	-I /usr/lib/glib-2.0/include

CFLAGS_LIBRARIES := \
	-L$(CUDAROOT)/lib64\
	-L$(CUDASDKROOT)/C/lib \
	-Lusr/lib64\
	-lcuda \
	-lcudart \
	-lglib-2.0
	 

LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
	CFLAGS_LIBRARIES += -L$(CUDAROOT)/lib64 
else
	CFLAGS_LIBRARIES += -lcutil_x86_64
endif

ifeq ($(LBITS),64)
	CFLAGS_LIBRARIES += -lcutil_x86_64
endif

NVCFLAGS += -DCUDA 

CFLAGS += -DCUDA

OBJECTS = \
	main_batch_sim.o \
	fileio.o \
	bistable_simulation.o \
	coherence_vector.o \
	design.o \
	exp_array.o \
	fileio_helpers.o \
	generic_utils.o \
	simulation.o \
	simulation_data.o \
	vector_table.o \
	objects/object_helpers.o \
	objects/QCADCell.o \
	objects/QCADCompoundDO.o \
	objects/QCADDesignObject.o \
	objects/QCADDOContainer.o \
	objects/QCADLabel.o \
	objects/QCADLayer.o \
	objects/QCADStretchyObject.o \
	objects/QCADSubstrate.o \
	cuda/bistable_cuda.o \
	cuda/conversion.o \
	cuda/coherence_vector_cuda.o \
	coloring/coloring.o

ifeq ($(EXTRA_PARAMS1), sm_10)
      NVCFLAGS += -arch=sm_10
endif

ifeq ($(EXTRA_PARAMS1), sm_11)
      NVCFLAGS += -arch=sm_11
endif

ifeq ($(EXTRA_PARAMS1), sm_12)
      NVCFLAGS += -arch=sm_12
endif

ifeq ($(EXTRA_PARAMS1), sm_13)
      NVCFLAGS += -arch=sm_13
endif

ifeq ($(EXTRA_PARAMS1), sm_20)
      NVCFLAGS += -arch=sm_20
endif

ifeq ($(EXTRA_PARAMS2), --fast-math)
      NVCFLAGS += --fast-math
endif

ifeq ($(EXTRA_PARAMS2), FLOAT)
      NVCFLAGS += -DFLOAT_PRECISION
endif

qcadesigner-cuda: $(OBJECTS)
	@echo "Using:"
	@echo "NVCFLAGS: $(NVCFLAGS)"
	@echo "CFLAGS: $(CFLAGS)"
	@echo "CFLAGS_LIBRARIES: $(CFLAGS_LIBRARIES)"
	@$(CC) $(GLIB) $(CFLAGS_LIBRARIES) $(CFLAGS) $(EXTRA_PARAMS3) -o ../bin/$@ $^\
	
%.o: %.c
	$(CC) $(GLIB) $(CFLAGS_LIBRARIES) $(CFLAGS) $(EXTRA_PARAMS3) -c -o $@ $<
	
cuda/%.o: cuda/%.c
	@$(CC) $(GLIB) $(CFLAGS_LIBRARIES) $(CFLAGS) $(EXTRA_PARAMS3) -c -o $@ $<
	
coloring/%.o: coloring/%.c
	@$(CC) $(GLIB) $(CFLAGS_LIBRARIES) $(CFLAGS) $(EXTRA_PARAMS3) -c -o $@ $<
	
objects/%.o: objects/%.c
	@$(CC) $(GLIB) $(CFLAGS_LIBRARIES) $(CFLAGS) $(EXTRA_PARAMS3) -c -o $@ $<
	
cuda/%.o: cuda/%.cu
	@$(NVCC) $(NVCFLAGS) $(EXTRA_PARAMS3) -c -o $@ $<
