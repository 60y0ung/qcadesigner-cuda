CC = gcc -g
NVCC = $(CUDA_HOME)/bin/nvcc -G -g --ptxas-options=-v --machine=64 -arch=sm13 --use_fast_math
GLIB=`pkg-config gtk+-2.0 --cflags --libs glib-2.0`

CFLAGS= \
	 -L$(CUDAROOT)/lib64  \
	 -L$(CUDASDKROOT)/C/lib \
	 -lcuda \
	 -lcudart \
	 -lcutil 
	 
CUDAROOT=$(CUDA_HOME)
CUDASDKROOT=$(CUDA_SDK_HOME)

OBJECTS= \
	main_batch_sim.o \
	fileio.o \
	bistable_simulation.o \
	coherence_vector.o \
	design.o \
	exp_array.o \
	fileio_helpers.o \
	generic_utils.o \
	simulation.o \
	simulation_data.o \
	vector_table.o \
	objects/object_helpers.o \
	objects/QCADCell.o \
	objects/QCADCompoundDO.o \
	objects/QCADDesignObject.o \
	objects/QCADDOContainer.o \
	objects/QCADLabel.o \
	objects/QCADLayer.o \
	objects/QCADStretchyObject.o \
	objects/QCADSubstrate.o \
	cuda/bistable_cuda.o \
	cuda/conversion.o \
	cuda/coherence_vector_cuda.o
	

NVCFLAGS= \
	-I $(CUDASDKROOT)/C/common/inc \
	-I $(CUDAROOT)/include \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include

all: QCADesigner

QCADesigner: $(OBJECTS)
	$(CC) $(GLIB) $(CFLAGS)  -o $@ $^
	
%.o: %.c
	$(CC) $(GLIB) $(CFLAGS) -c -o $@ $<
	
cuda/%.o: cuda/%.c
	$(CC) $(GLIB) $(CFLAGS) -c -o $@ $<
	
objects/%.o: objects/%.c
	$(CC) $(GLIB) $(CFLAGS) -c -o $@ $<
	
cuda/%.o: cuda/%.cu
	$(NVCC) $(NVCFLAGS) -c -o $@ $<

clean: 
	rm -f *.o objects/*.o cuda/*.o
	rm QCADesigner
